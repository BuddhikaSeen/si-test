#This profiling property will be overidden at runtime through 'SPRING_PROFILES_ACTIVE' System Variable
spring.profiles.active=

# Tomcat AJP configurations properties
tomcat.ajp.port=8898
tomcat.ajp.secure=false
tomcat.ajp.allowtrace=true
tomcat.ajp.max.threads=400
tomcat.ajp.accept.count=400

# Tomcat server port
server.servlet.context-path=/si-user-service
server.port=5000
server.tomcat.max-threads=400
server.tomcat.accept-count=400

# Mongo configuration settings
spring.data.mongodb.uri=mongodb://redis-mongo.dev.internal:27017/si-user-service

# Rabbit MQ Configurations
rabbitmq.host=localhost
rabbitmq.port=5672
rabbitmq.username=guest
rabbitmq.password=guest
rabbitmq.wait.for.reply.timeout=10000

rabbitmq.platform.events.exchangename=user.service.events.exchange

# The valid comma seperated list of user service ids
user.service.partnerids=si_partner_id

# Property for enabling the user notifications
user.service.user.email.notification.enabled=true

# The regular expression for the email address 
user.service.user.email.regexp=^\\w+?(\\w|\\.|\\-|\\+)*\\@(((\\w+?(\\w|\\-)*?\\w)|(\\w))\\.)+\\w+$

# The regular expression for the password
user.service.user.password.regexp=^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\\S+$).{8,}$

# The required minimum password length 
user.service.user.password.length=8

# The verification url which needs to be appended with the verification code.
# This should be configured with the frontend url.
#
# e.g : http://localhost:5001/somefrontend/verifyemail?code= or http://localhost:5001/somefrontend/verifyemail/
user.service.user.email.verification.url=http://sinsdevfrontend-node.us-east-1.elasticbeanstalk.com/verification?code=

user.service.user.email.onetime.password.url=http://sinsdevfrontend-node.us-east-1.elasticbeanstalk.com/createpassword?code=

# The expiration time for the user verification code. Set to 24hrs = 1440 minutes.
user.service.user.verification.code.expire.time=5

# The forgot password url which needs to be appended with the verification code.
# This should be configured with the frontend url.
#
# e.g : http://localhost:5001/somefrontend/forgotpassword?code= or http://localhost:5001/somefrontend/forgotpassword/
user.service.forgot.password.url=http://localhost:5001/si-user-service/forgotpassword/verification/

# The expiration time for the forgot password verification code.
user.service.forgot.password.verification.code.expire.time=60

# The expiration time for the one time password verification code.
user.service.user.onetime.password.verification.code.expire.time=5

logging.config=classpath:logback.xml

# The user created event name 
user.service.user.created.event.name=USER_SERVICE_USER_CREATED

# The user email updated event name
user.service.user.email.updated.event.name=USER_SERVICE_USER_EMAIL_UPDATED

# The forgot password event name
user.service.user.forgot.password.event.name=USER_SERVICE_FORGOT_PASSWORD

# The user email verification code resent event name
user.service.user.verification.resent.event.name=USER_SERVICE_USER_RESEND_VERIFICATION

# The user authentication token timeout in seconds. Set to 2hrs = 7200 seconds.
user.service.user.authentication.token.timeout=60

# The user verification check enabled for authentication.
user.service.verification.check.enabled=true

# Redis configuration settings
spring.redis.host=redis-mongo.dev.internal
spring.redis.port=6379
spring.redis.password=

resttemplate.connection.timeout=1000

resttemplate.read.timeout=1000

resttemplate.connection.max.per.route=400

resttemplate.connection.max.total=400

# CORS properties
si.cors.mapping=/**
si.cors.allowed.origins=*
si.cors.allowed.methods=*
si.cors.allowed.headers=*

user.service.sendgrid.connector.url=http://sins-dev-email-connector.us-east-1.elasticbeanstalk.com/si-sendgrid-email-connector
